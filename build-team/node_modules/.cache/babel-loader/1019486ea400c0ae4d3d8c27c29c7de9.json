{"ast":null,"code":"var _jsxFileName = \"G:\\\\Project\\\\GitHub\\\\build-team\\\\src\\\\context\\\\AuthContext.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createUserWithEmailAndPassword, onAuthStateChanged, signInWithEmailAndPassword, signOut } from 'firebase/auth';\nimport React, { Children, useContext, useState, useEffect } from 'react';\nimport { auth } from '../firebase/firebase-config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function AuthProvider(_ref) {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [currentUser, setCurrentUser] = useState();\n  const [authToken, setAuthToken] = useState();\n\n  function signup(email, password) {\n    return createUserWithEmailAndPassword(auth, email, password);\n  }\n\n  function login(email, password) {\n    return signInWithEmailAndPassword(auth, email, password);\n  }\n\n  function logout() {\n    return signOut(auth);\n  }\n\n  useEffect(() => {\n    const unsub = onAuthStateChanged(auth, user => {\n      setCurrentUser(user);\n\n      if (user) {\n        user.getIdToken().then(token => {\n          setAuthToken(token);\n        });\n      }\n    });\n    return unsub;\n  }, []);\n  const value = {\n    currentUser,\n    signup,\n    login,\n    logout,\n    authToken\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(AuthProvider, \"+GQopdYc0ZrImpFRwgsg8erRFvQ=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["G:/Project/GitHub/build-team/src/context/AuthContext.jsx"],"names":["createUserWithEmailAndPassword","onAuthStateChanged","signInWithEmailAndPassword","signOut","React","Children","useContext","useState","useEffect","auth","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","authToken","setAuthToken","signup","email","password","login","logout","unsub","user","getIdToken","then","token","value"],"mappings":";;;;AAAA,SAASA,8BAAT,EAAyCC,kBAAzC,EAA6DC,0BAA7D,EAAyFC,OAAzF,QAAwG,eAAxG;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,QAAtC,EAAgDC,SAAhD,QAAgE,OAAhE;AACA,SAASC,IAAT,QAAqB,6BAArB;;AAEA,MAAMC,WAAW,gBAAGN,KAAK,CAACO,aAAN,EAApB;AAEA,OAAO,SAASC,OAAT,GAAkB;AAAA;;AACrB,SAAON,UAAU,CAACI,WAAD,CAAjB;AACH;;GAFeE,O;;AAIhB,OAAO,SAASC,YAAT,OAAoC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAEvC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,EAA9C;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,EAA1C;;AAEA,WAASY,MAAT,CAAgBC,KAAhB,EAAuBC,QAAvB,EAAgC;AAC5B,WAAOrB,8BAA8B,CAACS,IAAD,EAAOW,KAAP,EAAcC,QAAd,CAArC;AACH;;AAED,WAASC,KAAT,CAAeF,KAAf,EAAsBC,QAAtB,EAA+B;AAC3B,WAAOnB,0BAA0B,CAACO,IAAD,EAAOW,KAAP,EAAcC,QAAd,CAAjC;AACH;;AAED,WAASE,MAAT,GAAiB;AACb,WAAOpB,OAAO,CAACM,IAAD,CAAd;AACH;;AAEDD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMgB,KAAK,GAAGvB,kBAAkB,CAACQ,IAAD,EAAQgB,IAAD,IAAU;AAC7CT,MAAAA,cAAc,CAACS,IAAD,CAAd;;AACA,UAAGA,IAAH,EAAQ;AACJA,QAAAA,IAAI,CAACC,UAAL,GAAkBC,IAAlB,CAAwBC,KAAD,IAAW;AAC9BV,UAAAA,YAAY,CAACU,KAAD,CAAZ;AACH,SAFD;AAGH;AACJ,KAP+B,CAAhC;AAQA,WAAOJ,KAAP;AACH,GAVQ,EAUN,EAVM,CAAT;AAaA,QAAMK,KAAK,GAAG;AACVd,IAAAA,WADU;AAEVI,IAAAA,MAFU;AAGVG,IAAAA,KAHU;AAIVC,IAAAA,MAJU;AAKVN,IAAAA;AALU,GAAd;AAQA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEY,KAA7B;AAAA,cACMf;AADN;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;IA3CeD,Y;;KAAAA,Y","sourcesContent":["import { createUserWithEmailAndPassword, onAuthStateChanged, signInWithEmailAndPassword, signOut } from 'firebase/auth';\r\nimport React, { Children, useContext, useState, useEffect} from 'react';\r\nimport { auth } from '../firebase/firebase-config';\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth(){\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n\r\n    const [currentUser, setCurrentUser] = useState();\r\n    const [authToken, setAuthToken] = useState();\r\n\r\n    function signup(email, password){\r\n        return createUserWithEmailAndPassword(auth, email, password)\r\n    }\r\n\r\n    function login(email, password){\r\n        return signInWithEmailAndPassword(auth, email, password)\r\n    }\r\n\r\n    function logout(){\r\n        return signOut(auth);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsub = onAuthStateChanged(auth, (user) => {\r\n            setCurrentUser(user)\r\n            if(user){\r\n                user.getIdToken().then((token) => {\r\n                    setAuthToken(token);\r\n                })\r\n            }\r\n        })\r\n        return unsub\r\n    }, [])\r\n    \r\n\r\n    const value = {\r\n        currentUser,\r\n        signup,\r\n        login,\r\n        logout,\r\n        authToken\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            { children }\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}